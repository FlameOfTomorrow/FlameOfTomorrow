  /*

  stat screen R menu is at 8a00b38
  find by breaking on key press while R menu open

  Each entry is 6 words
  Pointer 1 (up)
  POinter 2 (down)
  POinter 3 (left)
  Pointer 4 (right)
  x,y,Txtid
  Zero
  (Optional Pointer for alternate text routine)

  ST_Name:
  WORD 0
  POIN ST_Class
  WORD 0
  POIN ST_Luck
  BYTE 0x18
  BYTE 0x50
  SHORT 0
  WORD 0

  */

PUSH

  // Default R text positions
    //page 1
    ORG $889D8
      POIN PersonalDataRText
	//page 2
	ORG $889E0
	  POIN InventoryRtext1
	//page 3
	ORG $889F8
        POIN ST_Weapon

POP		

  //#include "EAstdlib.event"

  #define RMenu(up,down,left,right,xcoord,ycoord,TID) "POIN up down left right;BYTE xcoord ycoord; SHORT TID; WORD 0 0;"
  #define RMenu(up,down,left,right,xcoord,ycoord,TID,Getter) "POIN up down left right; BYTE xcoord ycoord; SHORT TID; POIN 0 Getter|1"
  #define RMenu(up,down,left,right,xcoord,ycoord,SlotID,Looper,Getter) "POIN up down left right; BYTE xcoord ycoord; SHORT SlotID; POIN Looper|1 Getter|1"

  #define NameDescGetter 0x88bd5
  #define ClassDescGetter 0x88c01
  #define ConditionGetter 0x88a2d
  #define ItemMenuRtextGetter 0x88A00
  #define ItemMenuRtextLooper 0x88B40
  #define SupportDescGetter 0x88C15


//Page 1
PUSH 
ORG 0xa00b38
ST_Name:
  RMenu(0,ST_Class,0,ST_Luck,0x18,0x50,0x0,NameDescGetter)
ST_Class:
  RMenu(ST_Name,ST_Level,0,ST_Cond,0x6,0x68,0x6E8,ClassDescGetter)
ST_Level:
  RMenu(ST_Class,ST_HP,0,ST_Exp,0x6,0x78,0x542)
ST_Exp:
  RMenu(ST_Class,ST_HP,ST_Level,ST_Skills,0x26,0x78,0x543)
ST_HP:
  RMenu(ST_Level,0,0,ST_Skills,0x6,0x88,0x544)

ST_Str:
  RMenu(PersonalDataRText,ST_Skl,ST_Name,ST_Mag,0x66,0x18,0x546)
ST_Mag:
  RMenu(PersonalDataRText,ST_Spd,ST_Str,0,0xAE,0x18,0x547)
ST_Skl:
  RMenu(ST_Str,ST_Def,ST_Name,ST_Spd,0x66,0x28,0x548)
ST_Spd:
  RMenu(ST_Mag,ST_Res,ST_Skl,0,0xAE,0x28,0x549)
  
ST_Luck:
  RMenu(ST_Def,ST_Con,ST_Name,ST_Mov,0x66,0x48,0x54a)
ST_Def:
  RMenu(ST_Skl,ST_Luck,ST_Name,ST_Res,0x66,0x38,0x54b)
ST_Res:
  RMenu(ST_Spd,ST_Mov,ST_Def,0,0xAE,0x38,0x54c)
ST_Mov:
  RMenu(ST_Res,ST_Aid,ST_Luck,0,0xAE,0x48,0x54d)
POP

//the rest of these are here because space
ALIGN 4

ST_Lead:
  RMenu(ST_Aid,ST_WepSkill,ST_Cond,0,0xAE,0x68,0x551)
ST_Con:
  RMenu(ST_Luck,ST_Cond,ST_Name,ST_Aid,0x66,0x58,0x54e)
ST_Aid:
  RMenu(ST_Mov,ST_Lead,ST_Con,0,0xAE,0x58,0x54F)
ST_Cond:
  RMenu(ST_Con,ST_Skill1,ST_Class,ST_Lead,0x66,0x68,0x552,ConditionGetter)

ST_Affin:
  RMenu(0,ST_Class,0,ST_Name,0x1,0x50,0x551)

ST_Skills:
  RMenu(ST_Cond,0,ST_Exp,ST_Skill1,0x66,0x80,SS_SkillsRText)
ST_Skill1:
  RMenu(ST_Cond,ST_Skill4,ST_Skills,ST_Skill2,0x7E,0x78,0,RTextLoop,SkillDescGetter)
ST_Skill2:
  RMenu(ST_Cond,ST_Skill5,ST_Skill1,ST_Skill3,0x8E,0x78,1,RTextLoop,SkillDescGetter+4)
ST_Skill3:
  RMenu(ST_Cond,ST_Skill6,ST_Skill2,ST_WepSkill,0x9E,0x78,2,RTextLoop,SkillDescGetter+8)
ST_Skill4:
  RMenu(ST_Skill1,0,ST_Skills,ST_Skill5,0x7E,0x88,3,RTextLoop,SkillDescGetter+12)
ST_Skill5:
  RMenu(ST_Skill2,0,ST_Skill4,ST_Skill6,0x8E,0x88,4,RTextLoop,SkillDescGetter+16)
ST_Skill6:
  RMenu(ST_Skill3,0,ST_Skill5,ST_ItemSkill,0x9E,0x88,5,RTextLoop,SkillDescGetter+20)

ST_WepSkill:
  RMenu(ST_Lead,ST_ItemSkill,ST_Skill3,0,0xB6,0x78,WeaponSkillDesc)
ST_ItemSkill:
  RMenu(ST_WepSkill,0,ST_Skill6,0,0xB6,0x88,ItemSkillDesc)
  
#ifdef Display_Growths_Toggle
  PersonalDataRText:
  RMenu(0,ST_Str,0,0,0x76,0x4,PersonalDataDesc1)
#else
  PersonalDataRText:
  RMenu(0,ST_Str,0,0,0x76,0x4,PersonalDataDesc2)
#endif

//Page 2
PUSH
ORG $A00D14 //The ones that fit inline
IT_Name:
  RMenu(0,IT_Class,0,InventoryRtext4,0x18,0x50,0x0,NameDescGetter)
IT_Class:
  RMenu(IT_Name,IT_Level,0,Inventory_Rng,0x6,0x68,0x6E8,ClassDescGetter)
IT_Level:
  RMenu(IT_Class,IT_HP,0,IT_Exp,0x6,0x78,0x542)
IT_Exp:
  RMenu(IT_Class,IT_HP,IT_Level,Inventory_Atk,0x26,0x78,0x543)
IT_HP:
  RMenu(IT_Level,0,0,Inventory_Hit,0x6,0x88,0x544)

ORG $A00DA0 
InventoryRtext1:
  RMenu(0,InventoryRtext2,IT_Name,0,0x68,0x18,0x00,ItemMenuRtextLooper,ItemMenuRtextGetter)
InventoryRtext2:
  RMenu(InventoryRtext1,InventoryRtext3,IT_Name,0,0x68,0x28,0x0001,ItemMenuRtextLooper,ItemMenuRtextGetter)
InventoryRtext3:
  RMenu(InventoryRtext2,InventoryRtext4,IT_Name,0,0x68,0x38,0x0002,ItemMenuRtextLooper,ItemMenuRtextGetter)
InventoryRtext4:
  RMenu(InventoryRtext3,InventoryRtext5,IT_Name,0,0x68,0x48,0x0003,ItemMenuRtextLooper,ItemMenuRtextGetter)
InventoryRtext5:
  RMenu(InventoryRtext4,Inventory_Atk,IT_Name,Inventory_Rng,0x68,0x58,0x0004,ItemMenuRtextLooper,ItemMenuRtextGetter)

ORG $A00E2C 
Inventory_Atk:
  RMenu(InventoryRtext5,Inventory_Hit,IT_Exp,Inventory_Crt,0x76,0x78,0x55C)
Inventory_Hit:
  RMenu(Inventory_Atk,0,IT_HP,Inventory_Avo,0x76,0x88,0x55D)
Inventory_Rng:
  RMenu(InventoryRtext5,Inventory_Crt,IT_Class,0,0xae,0x68,0x55E)
Inventory_Crt:
  RMenu(Inventory_Rng,Inventory_Avo,Inventory_Atk,0,0xae,0x78,0x55F)
Inventory_Avo:
  RMenu(Inventory_Crt,0,Inventory_Hit,0,0xae,0x88,0x560)
POP


// Page 3
PUSH 
ORG 0xA00EB8 //The ones that fit inline
ST_Name3:
  RMenu(0,ST_Class3,0,ST_Weapon,0x18,0x50,0x0,NameDescGetter)
ST_Class3:
  RMenu(ST_Name3,ST_Level3,0,ST_Weapon,0x6,0x68,0x6E8,ClassDescGetter)
ST_Level3:
  RMenu(ST_Class3,ST_HP3,0,ST_Exp3,0x6,0x78,0x542)
ST_Exp3:
  RMenu(ST_Class3,ST_HP3,ST_Level3,ST_Weapon,0x26,0x78,0x543)
ST_HP3:
  RMenu(ST_Level3,0,0,ST_Weapon,0x6,0x88,0x544)
POP //Anything more

ST_Weapon1:
  RMenu(0,ST_Weapon3,ST_Name3,ST_Weapon2,0x68,0x18,0)
ST_Weapon2:
  RMenu(0,ST_Weapon4,ST_Weapon1,0,0xA8,0x18,2)
ST_Weapon3:
  RMenu(ST_Weapon1,ST_Talk,ST_Name3,ST_Weapon4,0x68,0x28,1)
ST_Weapon4:
  RMenu(ST_Weapon2,ST_Trv,ST_Weapon3,0,0xA8,0x28,3)

ST_Weapon:
  RMenu(0,ST_Talk,ST_Name3,ST_Trv,0x68,0x18,WeaponRankDesc)
  
ST_Talk:
  RMenu(ST_Weapon,ST_Support,ST_Name3,ST_Trv,0x70,0x40,SS_TalkRText)
ST_Trv:
  RMenu(ST_Weapon,ST_Support,ST_Talk,0,0xB0,0x40,0x550)

ST_Support:
  RMenu(ST_Talk,ST_Name3,ST_Name3,0,0x80,0x50,0x569,SupportDescGetter)
  
  
  